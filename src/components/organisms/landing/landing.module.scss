@use '@resources/scss/colors';
@use '@resources/scss/border';
@use '@resources/scss/breakpoints';

.landing {
	display: flex;
	min-height: 100vh;

	.content {
		flex: 1;
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
		gap: 1rem;
		justify-content: center;

		.slogan {
			background: linear-gradient(to bottom, colors.$primary, darken(colors.$primary, 10%));
			background-clip: text;
			color: transparent;
		}

		.logo-wrapper {
			position: absolute;
			z-index: -10;

			.logo {
				width: 32rem;
			}
		}

		.call-to-action {
			display: flex;
			width: 30%;
			gap: 1rem;

			& > * {
				flex: 1;
			}
		}
	}
}

/* .landing {
	display: flex;
	flex-direction: column;

	.content {
		position: relative;
		flex-grow: 1;

		.presentation {
			display: flex;
			flex-direction: column;
			justify-content: center;
			.title {
				color: colors.$primary;
			}
			.slogan {
				color: colors.$quarternary;

				&::after {
					content: none;
				}
			}
			.description {
				color: colors.$quarternary;
				font-weight: 300;
			}
		}
	}
	.social-links {
		z-index: 10;
		position: absolute;
	}
}

@media screen and(min-width: breakpoints.$mobile-medium ) {
}

@media screen and(min-width: breakpoints.$tablet) {
}

@media screen and(max-height: (breakpoints.$laptop - 1)) {
	.landing {
		position: relative;
		box-sizing: border-box;
		display: flex;

		height: 100vh;
		padding: 0;

		background: colors.$base;

		.right {
			display: none;
		}

		.content {
			overflow: hidden;
			flex-grow: 1;

			margin-top: var(--section-padding-y);
			padding: var(--section-padding-x);

			background: linear-gradient(to bottom, colors.$white, darken(colors.$white, 15%));
			border-radius: 0;
			box-shadow: none;

			.presentation {
				:is(*) {
					z-index: 5;
				}

				.description {
					margin-top: 1rem;
				}

				display: flex;
				flex-grow: 1;
				height: 100%;
				margin: auto 0;

				.call-to-action {
					margin-top: auto;
					display: flex;
					flex-direction: column;
					gap: 1rem;
				}
			}

			.call-to-scroll {
				display: none;
			}
		}
	}
}

@media screen and(min-width: breakpoints.$laptop) {
	.landing {
		padding: var(--section-padding-y) var(--section-padding-x);
		position: relative;

		width: 100%;
		height: 100vh;

		background: colors.$base;

		.right {
			--section-padding-x: inherit;
			position: fixed;
			top: 50%;
			right: 0;
			display: flex;
			flex-direction: column;

			width: var(--section-padding-x);

			transform: translate(0, -50%);

			.social {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 2rem;
			}
		}

		.content {
			display: grid;
			grid-template-columns: repeat(2, calc(50% - (var(--section-padding-x) / 2)));
			grid-template-rows: calc(100vh - (var(--section-padding-y) * 2) - 8rem);
			grid-column-gap: var(--section-padding-x);

			width: 100%;
			padding: 4rem;
			margin: 0;

			background: colors.$white;

			border-radius: border.$radius-large;
			box-shadow: 0 0 4rem 0 rgba(colors.$quarternary, 0.25);

			.presentation {
				:is(.title, .subtitle, .slogan) {
					white-space: nowrap;
				}

				.call-to-action {
					margin-top: 2rem;
					grid-column-gap: 2rem;
					display: grid;
					grid-template-columns: 1fr 1fr;
				}
			}
			.picture {
				display: flex;
				flex-direction: column;
				height: 100%;
				justify-content: center;

				.logo {
					fill: colors.$primary;
					filter: drop-shadow(0 0 2rem rgba(colors.$primary, 0.75));
				}
			}
		}
	}
}

@keyframes logo-animation {
	0% {
	}
}

@media screen and(min-width: breakpoints.$desktop) {
	.landing {
		.content {
			align-items: center;
			.presentation {
				.call-to-action {
					grid-template-columns: 4fr 6fr;
				}
			}
		}
	}
}

@media screen and(min-width: breakpoints.$widescreen) {
	.landing {
	}
}
 */
